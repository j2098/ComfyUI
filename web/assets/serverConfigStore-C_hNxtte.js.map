{"version":3,"file":"serverConfigStore-C_hNxtte.js","sources":["../../src/stores/serverConfigStore.ts"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { computed, ref } from 'vue'\n\nimport { ServerConfig, ServerConfigValue } from '@/constants/serverConfig'\n\nexport type ServerConfigWithValue<T> = ServerConfig<T> & {\n  /**\n   * Current value.\n   */\n  value: T\n  /**\n   * Initial value loaded from settings.\n   */\n  initialValue: T\n}\n\nexport const useServerConfigStore = defineStore('serverConfig', () => {\n  const serverConfigById = ref<\n    Record<string, ServerConfigWithValue<ServerConfigValue>>\n  >({})\n  const serverConfigs = computed(() => {\n    return Object.values(serverConfigById.value)\n  })\n  const modifiedConfigs = computed<ServerConfigWithValue<ServerConfigValue>[]>(\n    () => {\n      return serverConfigs.value.filter((config) => {\n        return config.initialValue !== config.value\n      })\n    }\n  )\n  const revertChanges = () => {\n    for (const config of modifiedConfigs.value) {\n      config.value = config.initialValue\n    }\n  }\n  const serverConfigsByCategory = computed<\n    Record<string, ServerConfigWithValue<ServerConfigValue>[]>\n  >(() => {\n    return serverConfigs.value.reduce(\n      (acc, config) => {\n        const category = config.category?.[0] ?? 'General'\n        acc[category] = acc[category] || []\n        acc[category].push(config)\n        return acc\n      },\n      {} as Record<string, ServerConfigWithValue<ServerConfigValue>[]>\n    )\n  })\n  const serverConfigValues = computed<Record<string, ServerConfigValue>>(() => {\n    return Object.fromEntries(\n      serverConfigs.value.map((config) => {\n        return [\n          config.id,\n          config.value === config.defaultValue ||\n          config.value === null ||\n          config.value === undefined\n            ? undefined\n            : config.value\n        ]\n      })\n    )\n  })\n  const launchArgs = computed<Record<string, string>>(() => {\n    const args: Record<\n      string,\n      Omit<ServerConfigValue, 'undefined' | 'null'>\n    > = Object.assign(\n      {},\n      ...serverConfigs.value.map((config) => {\n        // Filter out configs that have the default value or undefined | null value\n        if (\n          config.value === config.defaultValue ||\n          config.value === null ||\n          config.value === undefined\n        ) {\n          return {}\n        }\n        return config.getValue\n          ? config.getValue(config.value)\n          : { [config.id]: config.value }\n      })\n    )\n\n    // Convert true to empty string\n    // Convert number to string\n    return Object.fromEntries(\n      Object.entries(args).map(([key, value]) => {\n        if (value === true) {\n          return [key, '']\n        }\n        return [key, value.toString()]\n      })\n    ) as Record<string, string>\n  })\n  const commandLineArgs = computed<string>(() => {\n    return Object.entries(launchArgs.value)\n      .map(([key, value]) => [`--${key}`, value])\n      .flat()\n      .filter((arg: string) => arg !== '')\n      .join(' ')\n  })\n\n  function loadServerConfig(\n    configs: ServerConfig<ServerConfigValue>[],\n    values: Record<string, ServerConfigValue>\n  ) {\n    for (const config of configs) {\n      const value = values[config.id] ?? config.defaultValue\n      serverConfigById.value[config.id] = {\n        ...config,\n        value,\n        initialValue: value\n      }\n    }\n  }\n\n  return {\n    serverConfigById,\n    serverConfigs,\n    modifiedConfigs,\n    serverConfigsByCategory,\n    serverConfigValues,\n    launchArgs,\n    commandLineArgs,\n    revertChanges,\n    loadServerConfig\n  }\n})\n"],"names":[],"mappings":"0LAgBa,MAAA,qBAAuB,YAAY,eAAgB,IAAM,CAC9D,MAAA,iBAAmB,IAEvB,CAAA,CAAE,EACE,cAAgB,SAAS,IACtB,OAAO,OAAO,iBAAiB,KAAK,CAC5C,EACK,gBAAkB,SACtB,IACS,cAAc,MAAM,OAAQ,QAC1B,OAAO,eAAiB,OAAO,KACvC,CACH,EAEI,cAAgB,WAAM,CACf,UAAA,UAAU,gBAAgB,MACnC,OAAO,MAAQ,OAAO,YACxB,EAHoB,iBAKhB,wBAA0B,SAE9B,IACO,cAAc,MAAM,OACzB,CAAC,IAAK,SAAW,CACf,MAAM,SAAW,OAAO,WAAW,CAAC,GAAK,UACzC,WAAI,QAAQ,EAAI,IAAI,QAAQ,GAAK,CAAA,EAC7B,IAAA,QAAQ,EAAE,KAAK,MAAM,EAClB,GACT,EACA,CAAC,CAAA,CAEJ,EACK,mBAAqB,SAA4C,IAC9D,OAAO,YACZ,cAAc,MAAM,IAAK,QAChB,CACL,OAAO,GACP,OAAO,QAAU,OAAO,cACxB,OAAO,QAAU,MACjB,OAAO,QAAU,OACb,OACA,OAAO,KAAA,CAEd,CAAA,CAEJ,EACK,WAAa,SAAiC,IAAM,CACxD,MAAM,KAGF,OAAO,OACT,CAAC,EACD,GAAG,cAAc,MAAM,IAAK,QAGxB,OAAO,QAAU,OAAO,cACxB,OAAO,QAAU,MACjB,OAAO,QAAU,OAEV,GAEF,OAAO,SACV,OAAO,SAAS,OAAO,KAAK,EAC5B,CAAE,CAAC,OAAO,EAAE,EAAG,OAAO,KAAM,CACjC,CAAA,EAKH,OAAO,OAAO,YACZ,OAAO,QAAQ,IAAI,EAAE,IAAI,CAAC,CAAC,IAAK,KAAK,IAC/B,QAAU,GACL,CAAC,IAAK,EAAE,EAEV,CAAC,IAAK,MAAM,SAAU,CAAA,CAC9B,CAAA,CACH,CACD,EACK,gBAAkB,SAAiB,IAChC,OAAO,QAAQ,WAAW,KAAK,EACnC,IAAI,CAAC,CAAC,IAAK,KAAK,IAAM,CAAC,KAAK,GAAG,GAAI,KAAK,CAAC,EACzC,KAAA,EACA,OAAQ,KAAgB,MAAQ,EAAE,EAClC,KAAK,GAAG,CACZ,EAEQ,SAAA,iBACP,QACA,OACA,CACA,UAAW,UAAU,QAAS,CAC5B,MAAM,MAAQ,OAAO,OAAO,EAAE,GAAK,OAAO,aACzB,iBAAA,MAAM,OAAO,EAAE,EAAI,CAClC,GAAG,OACH,MACA,aAAc,KAAA,CAElB,CACF,CAZS,mDAcF,CACL,iBACA,cACA,gBACA,wBACA,mBACA,WACA,gBACA,cACA,gBAAA,CAEJ,CAAC"}