var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{$ as defineStore,ab as ref,c as computed}from"./index-DS26FKwS.js";const useServerConfigStore=defineStore("serverConfig",()=>{const serverConfigById=ref({}),serverConfigs=computed(()=>Object.values(serverConfigById.value)),modifiedConfigs=computed(()=>serverConfigs.value.filter(config=>config.initialValue!==config.value)),revertChanges=__name(()=>{for(const config of modifiedConfigs.value)config.value=config.initialValue},"revertChanges"),serverConfigsByCategory=computed(()=>serverConfigs.value.reduce((acc,config)=>{const category=config.category?.[0]??"General";return acc[category]=acc[category]||[],acc[category].push(config),acc},{})),serverConfigValues=computed(()=>Object.fromEntries(serverConfigs.value.map(config=>[config.id,config.value===config.defaultValue||config.value===null||config.value===void 0?void 0:config.value]))),launchArgs=computed(()=>{const args=Object.assign({},...serverConfigs.value.map(config=>config.value===config.defaultValue||config.value===null||config.value===void 0?{}:config.getValue?config.getValue(config.value):{[config.id]:config.value}));return Object.fromEntries(Object.entries(args).map(([key,value])=>value===!0?[key,""]:[key,value.toString()]))}),commandLineArgs=computed(()=>Object.entries(launchArgs.value).map(([key,value])=>[`--${key}`,value]).flat().filter(arg=>arg!=="").join(" "));function loadServerConfig(configs,values){for(const config of configs){const value=values[config.id]??config.defaultValue;serverConfigById.value[config.id]={...config,value,initialValue:value}}}return __name(loadServerConfig,"loadServerConfig"),{serverConfigById,serverConfigs,modifiedConfigs,serverConfigsByCategory,serverConfigValues,launchArgs,commandLineArgs,revertChanges,loadServerConfig}});export{useServerConfigStore as u};
//# sourceMappingURL=serverConfigStore-iXoG1DkF.js.map
