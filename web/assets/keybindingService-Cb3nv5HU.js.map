{"version":3,"file":"keybindingService-Cb3nv5HU.js","sources":["../../src/constants/coreKeybindings.ts","../../src/services/keybindingService.ts"],"sourcesContent":["import type { Keybinding } from '@/types/keyBindingTypes'\n\nexport const CORE_KEYBINDINGS: Keybinding[] = [\n  {\n    combo: {\n      ctrl: true,\n      key: 'Enter'\n    },\n    commandId: 'Comfy.QueuePrompt'\n  },\n  {\n    combo: {\n      ctrl: true,\n      shift: true,\n      key: 'Enter'\n    },\n    commandId: 'Comfy.QueuePromptFront'\n  },\n  {\n    combo: {\n      ctrl: true,\n      alt: true,\n      key: 'Enter'\n    },\n    commandId: 'Comfy.Interrupt'\n  },\n  {\n    combo: {\n      key: 'r'\n    },\n    commandId: 'Comfy.RefreshNodeDefinitions'\n  },\n  {\n    combo: {\n      key: 'q'\n    },\n    commandId: 'Workspace.ToggleSidebarTab.queue'\n  },\n  {\n    combo: {\n      key: 'w'\n    },\n    commandId: 'Workspace.ToggleSidebarTab.workflows'\n  },\n  {\n    combo: {\n      key: 'n'\n    },\n    commandId: 'Workspace.ToggleSidebarTab.node-library'\n  },\n  {\n    combo: {\n      key: 'm'\n    },\n    commandId: 'Workspace.ToggleSidebarTab.model-library'\n  },\n  {\n    combo: {\n      key: 's',\n      ctrl: true\n    },\n    commandId: 'Comfy.SaveWorkflow'\n  },\n  {\n    combo: {\n      key: 'o',\n      ctrl: true\n    },\n    commandId: 'Comfy.OpenWorkflow'\n  },\n  {\n    combo: {\n      key: 'Backspace'\n    },\n    commandId: 'Comfy.ClearWorkflow'\n  },\n  {\n    combo: {\n      key: 'g',\n      ctrl: true\n    },\n    commandId: 'Comfy.Graph.GroupSelectedNodes'\n  },\n  {\n    combo: {\n      key: ',',\n      ctrl: true\n    },\n    commandId: 'Comfy.ShowSettingsDialog'\n  },\n  // For '=' both holding shift and not holding shift\n  {\n    combo: {\n      key: '=',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ZoomIn',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: '+',\n      alt: true,\n      shift: true\n    },\n    commandId: 'Comfy.Canvas.ZoomIn',\n    targetElementId: 'graph-canvas'\n  },\n  // For number pad '+'\n  {\n    combo: {\n      key: '+',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ZoomIn',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: '-',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ZoomOut',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: '.'\n    },\n    commandId: 'Comfy.Canvas.FitView',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: 'p'\n    },\n    commandId: 'Comfy.Canvas.ToggleSelected.Pin',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: 'c',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ToggleSelectedNodes.Collapse',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: 'b',\n      ctrl: true\n    },\n    commandId: 'Comfy.Canvas.ToggleSelectedNodes.Bypass',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: 'm',\n      ctrl: true\n    },\n    commandId: 'Comfy.Canvas.ToggleSelectedNodes.Mute',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: '`',\n      ctrl: true\n    },\n    commandId: 'Workspace.ToggleBottomPanelTab.logs-terminal'\n  },\n  {\n    combo: {\n      key: 'f'\n    },\n    commandId: 'Workspace.ToggleFocusMode'\n  }\n]\n","import { CORE_KEYBINDINGS } from '@/constants/coreKeybindings'\nimport { useCommandStore } from '@/stores/commandStore'\nimport {\n  KeyComboImpl,\n  KeybindingImpl,\n  useKeybindingStore\n} from '@/stores/keybindingStore'\nimport { useSettingStore } from '@/stores/settingStore'\n\nexport const useKeybindingService = () => {\n  const keybindingStore = useKeybindingStore()\n  const commandStore = useCommandStore()\n  const settingStore = useSettingStore()\n\n  const keybindHandler = async function (event: KeyboardEvent) {\n    const keyCombo = KeyComboImpl.fromEvent(event)\n    if (keyCombo.isModifier) {\n      return\n    }\n\n    // Ignore non-modifier keybindings if typing in input fields\n    const target = event.composedPath()[0] as HTMLElement\n    if (\n      !keyCombo.hasModifier &&\n      (target.tagName === 'TEXTAREA' ||\n        target.tagName === 'INPUT' ||\n        (target.tagName === 'SPAN' &&\n          target.classList.contains('property_value')))\n    ) {\n      return\n    }\n\n    const keybinding = keybindingStore.getKeybinding(keyCombo)\n    if (keybinding && keybinding.targetElementId !== 'graph-canvas') {\n      // Prevent default browser behavior first, then execute the command\n      event.preventDefault()\n      await commandStore.execute(keybinding.commandId)\n      return\n    }\n\n    // Only clear dialogs if not using modifiers\n    if (event.ctrlKey || event.altKey || event.metaKey) {\n      return\n    }\n\n    // Escape key: close the first open modal found, and all dialogs\n    if (event.key === 'Escape') {\n      const modals = document.querySelectorAll<HTMLElement>('.comfy-modal')\n      for (const modal of modals) {\n        const modalDisplay = window\n          .getComputedStyle(modal)\n          .getPropertyValue('display')\n\n        if (modalDisplay !== 'none') {\n          modal.style.display = 'none'\n          break\n        }\n      }\n\n      for (const d of document.querySelectorAll('dialog')) d.close()\n    }\n  }\n\n  const registerCoreKeybindings = () => {\n    for (const keybinding of CORE_KEYBINDINGS) {\n      keybindingStore.addDefaultKeybinding(new KeybindingImpl(keybinding))\n    }\n  }\n\n  function registerUserKeybindings() {\n    // Unset bindings first as new bindings might conflict with default bindings.\n    const unsetBindings = settingStore.get('Comfy.Keybinding.UnsetBindings')\n    for (const keybinding of unsetBindings) {\n      keybindingStore.unsetKeybinding(new KeybindingImpl(keybinding))\n    }\n    const newBindings = settingStore.get('Comfy.Keybinding.NewBindings')\n    for (const keybinding of newBindings) {\n      keybindingStore.addUserKeybinding(new KeybindingImpl(keybinding))\n    }\n  }\n\n  async function persistUserKeybindings() {\n    // TODO(https://github.com/Comfy-Org/ComfyUI_frontend/issues/1079):\n    // Allow setting multiple values at once in settingStore\n    await settingStore.set(\n      'Comfy.Keybinding.NewBindings',\n      Object.values(keybindingStore.getUserKeybindings())\n    )\n    await settingStore.set(\n      'Comfy.Keybinding.UnsetBindings',\n      Object.values(keybindingStore.getUserUnsetKeybindings())\n    )\n  }\n\n  return {\n    keybindHandler,\n    registerCoreKeybindings,\n    registerUserKeybindings,\n    persistUserKeybindings\n  }\n}\n"],"names":[],"mappings":"6PAEO,MAAM,iBAAiC,CAC5C,CACE,MAAO,CACL,KAAM,GACN,IAAK,OACP,EACA,UAAW,mBACb,EACA,CACE,MAAO,CACL,KAAM,GACN,MAAO,GACP,IAAK,OACP,EACA,UAAW,wBACb,EACA,CACE,MAAO,CACL,KAAM,GACN,IAAK,GACL,IAAK,OACP,EACA,UAAW,iBACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,8BACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,kCACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,sCACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,yCACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,0CACb,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,oBACb,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,oBACb,EACA,CACE,MAAO,CACL,IAAK,WACP,EACA,UAAW,qBACb,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,gCACb,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,0BACb,EAEA,CACE,MAAO,CACL,IAAK,IACL,IAAK,EACP,EACA,UAAW,sBACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,IAAK,GACL,MAAO,EACT,EACA,UAAW,sBACX,gBAAiB,cACnB,EAEA,CACE,MAAO,CACL,IAAK,IACL,IAAK,EACP,EACA,UAAW,sBACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,IAAK,EACP,EACA,UAAW,uBACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,uBACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,kCACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,IAAK,EACP,EACA,UAAW,4CACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,0CACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,wCACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,8CACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,2BACb,CACF,ECvKa,qBAAuB,WAAM,CACxC,MAAM,gBAAkB,qBAClB,aAAe,kBACf,aAAe,kBAEf,eAAiB,sBAAgB,MAAsB,CACrD,MAAA,SAAW,aAAa,UAAU,KAAK,EAC7C,GAAI,SAAS,WACX,OAIF,MAAM,OAAS,MAAM,aAAa,EAAE,CAAC,EACrC,GACE,CAAC,SAAS,cACT,OAAO,UAAY,YAClB,OAAO,UAAY,SAClB,OAAO,UAAY,QAClB,OAAO,UAAU,SAAS,gBAAgB,GAE9C,OAGI,MAAA,WAAa,gBAAgB,cAAc,QAAQ,EACrD,GAAA,YAAc,WAAW,kBAAoB,eAAgB,CAE/D,MAAM,eAAe,EACf,MAAA,aAAa,QAAQ,WAAW,SAAS,EAC/C,MACF,CAGA,GAAI,QAAM,SAAW,MAAM,QAAU,MAAM,UAKvC,MAAM,MAAQ,SAAU,CACpB,MAAA,OAAS,SAAS,iBAA8B,cAAc,EACpE,UAAW,SAAS,OAKlB,GAJqB,OAClB,iBAAiB,KAAK,EACtB,iBAAiB,SAAS,IAER,OAAQ,CAC3B,MAAM,MAAM,QAAU,OACtB,KACF,CAGF,UAAW,KAAK,SAAS,iBAAiB,QAAQ,IAAK,OACzD,CAAA,EA9CqB,kBAiDjB,wBAA0B,WAAM,CACpC,UAAW,cAAc,iBACvB,gBAAgB,qBAAqB,IAAI,eAAe,UAAU,CAAC,CACrE,EAH8B,2BAMhC,SAAS,yBAA0B,CAE3B,MAAA,cAAgB,aAAa,IAAI,gCAAgC,EACvE,UAAW,cAAc,cACvB,gBAAgB,gBAAgB,IAAI,eAAe,UAAU,CAAC,EAE1D,MAAA,YAAc,aAAa,IAAI,8BAA8B,EACnE,UAAW,cAAc,YACvB,gBAAgB,kBAAkB,IAAI,eAAe,UAAU,CAAC,CAEpE,CAVS,0DAYT,eAAe,wBAAyB,CAGtC,MAAM,aAAa,IACjB,+BACA,OAAO,OAAO,gBAAgB,oBAAoB,CAAA,EAEpD,MAAM,aAAa,IACjB,iCACA,OAAO,OAAO,gBAAgB,yBAAyB,CAAA,CAE3D,CAXe,+DAaR,CACL,eACA,wBACA,wBACA,sBAAA,CAEJ,EA3FoC"}