{"version":3,"file":"UserSelectView-CValyrOt.js","sources":["../../src/views/UserSelectView.vue"],"sourcesContent":["<template>\n  <BaseViewTemplate dark>\n    <main\n      id=\"comfy-user-selection\"\n      class=\"min-w-84 relative rounded-lg bg-[var(--comfy-menu-bg)] p-5 px-10 shadow-lg\"\n    >\n      <h1 class=\"my-2.5 mb-7 font-normal\">ComfyUI</h1>\n      <div class=\"flex w-full flex-col items-center\">\n        <div class=\"flex w-full flex-col gap-2\">\n          <label for=\"new-user-input\">{{ $t('userSelect.newUser') }}:</label>\n          <InputText\n            id=\"new-user-input\"\n            v-model=\"newUsername\"\n            :placeholder=\"$t('userSelect.enterUsername')\"\n            @keyup.enter=\"login\"\n          />\n        </div>\n        <Divider />\n        <div class=\"flex w-full flex-col gap-2\">\n          <label for=\"existing-user-select\"\n            >{{ $t('userSelect.existingUser') }}:</label\n          >\n          <Select\n            v-model=\"selectedUser\"\n            class=\"w-full\"\n            inputId=\"existing-user-select\"\n            :options=\"userStore.users\"\n            option-label=\"username\"\n            :placeholder=\"$t('userSelect.selectUser')\"\n            :disabled=\"createNewUser\"\n          />\n          <Message v-if=\"error\" severity=\"error\">{{ error }}</Message>\n        </div>\n        <footer class=\"mt-5\">\n          <Button :label=\"$t('userSelect.next')\" @click=\"login\" />\n        </footer>\n      </div>\n    </main>\n  </BaseViewTemplate>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport Divider from 'primevue/divider'\nimport InputText from 'primevue/inputtext'\nimport Message from 'primevue/message'\nimport Select from 'primevue/select'\nimport { computed, onMounted, ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport { User, useUserStore } from '@/stores/userStore'\nimport BaseViewTemplate from '@/views/templates/BaseViewTemplate.vue'\n\nconst userStore = useUserStore()\nconst router = useRouter()\n\nconst selectedUser = ref<User | null>(null)\nconst newUsername = ref('')\nconst loginError = ref('')\n\nconst createNewUser = computed(() => newUsername.value.trim() !== '')\nconst newUserExistsError = computed(() => {\n  return userStore.users.find((user) => user.username === newUsername.value)\n    ? `User \"${newUsername.value}\" already exists`\n    : ''\n})\nconst error = computed(() => newUserExistsError.value || loginError.value)\n\nconst login = async () => {\n  try {\n    const user = createNewUser.value\n      ? await userStore.createUser(newUsername.value)\n      : selectedUser.value\n\n    if (!user) {\n      throw new Error('No user selected')\n    }\n\n    userStore.login(user)\n    router.push('/')\n  } catch (err) {\n    loginError.value = err.message ?? JSON.stringify(err)\n  }\n}\n\nonMounted(async () => {\n  if (!userStore.initialized) {\n    await userStore.initialize()\n  }\n})\n</script>\n"],"names":[],"mappings":"kjCAqDA,MAAM,UAAY,eACZ,OAAS,YAET,aAAe,IAAiB,IAAI,EACpC,YAAc,IAAI,EAAE,EACpB,WAAa,IAAI,EAAE,EAEnB,cAAgB,SAAS,IAAM,YAAY,MAAM,KAAA,IAAW,EAAE,EAC9D,mBAAqB,SAAS,IAC3B,UAAU,MAAM,KAAM,MAAS,KAAK,WAAa,YAAY,KAAK,EACrE,SAAS,YAAY,KAAK,mBAC1B,EACL,EACK,MAAQ,SAAS,IAAM,mBAAmB,OAAS,WAAW,KAAK,EAEnE,MAAQ,gBAAY,CACpB,GAAA,CACI,MAAA,KAAO,cAAc,MACvB,MAAM,UAAU,WAAW,YAAY,KAAK,EAC5C,aAAa,MAEjB,GAAI,CAAC,KACG,MAAA,IAAI,MAAM,kBAAkB,EAGpC,UAAU,MAAM,IAAI,EACpB,OAAO,KAAK,GAAG,QACR,IAAK,CACZ,WAAW,MAAQ,IAAI,SAAW,KAAK,UAAU,GAAG,CACtD,CAAA,EAdY,SAiBd,iBAAU,SAAY,CACf,UAAU,aACb,MAAM,UAAU,YAClB,CACD"}